@startuml

namespace UML {

class PlantUMLConvertWindow {
  +static void CreateWindow()
}

class PlantUMLConverter {
  -IContentParser[] parsers
  +void ConvertProcess()
}

interface IContentParser {
   IContentBuilder[] Parse(string[] lines, ref int index, string namespace_name = "")
}

interface IContentBuilder {
  void AddInheritance(IContentBuilder builder);
  string[] GetAbstractMembers();
  string GetName();
  StringBuilder BuildScriptText(PlantUMLConvertOption option)
}

abstract class ContainerBuilderBase {

}

class PlantUMLConvertOption {
  +string createFolderPath
  +string arrowPattern
  +string arrowExtensionLeftPattern
  +string arrowExtensionRightPatternâˆ‚
  +bool isNonCreateMember
  +string[] declarationUsings

  +void Copy()
  +void Copy(PlantUMLConvertOption option)
}

class PlantUMLUtility {
}

PlantUMLConvertWindow -down-> PlantUMLConverter
PlantUMLConvertWindow --> PlantUMLConvertOption

PlantUMLConverter -right-> PlantUMLConvertOption
PlantUMLConverter -down-> IContentParser
PlantUMLConverter --> IContentBuilder

IContentParser -> IContentBuilder

IContentParser <|-down- ClassParser
IContentParser <|-down- InterfaceParser
IContentParser <|-down- EnumParser

IContentBuilder <|-down- ContainerBuilderBase
ContainerBuilderBase <|-down- ClassBuilder
ContainerBuilderBase <|-down- InterfaceBuilder
IContentBuilder <|-down- EnumBuilder

}

@enduml
